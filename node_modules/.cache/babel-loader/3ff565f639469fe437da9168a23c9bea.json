{"ast":null,"code":"var _jsxFileName = \"/Users/yaroslawbagriy/Dev/React/burger-builder-app/src/containers/Checkout/ContactData/ContactData.js\";\nimport React, { Component } from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport classes from './ContactData.css';\nimport axios from '../../../axios-orders';\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      address: {\n        street: '',\n        postalCode: ''\n      },\n      loading: false\n    };\n\n    this.orderHandler = event => {\n      event.preventDefault();\n      console.log(this.props.ingredients);\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.props.ingredients,\n        price: this.props.price,\n        customer: {\n          name: 'Max',\n          address: {\n            street: '123 Burger Street',\n            zipCode: '12345',\n            country: 'Burger'\n          },\n          email: 'burger@burger.com'\n        },\n        deliveryMethod: 'fastest'\n      };\n      axios.post('/orders.json', order).then(response => {\n        console.log(response);\n        this.setState({\n          loading: false\n        });\n        this.props.history.push('/');\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          loading: false\n        });\n      });\n    };\n  }\n\n  render() {\n    let form = React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: classes.Input,\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Your Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: classes.Input,\n      type: \"text\",\n      name: \"email\",\n      placeholder: \"Your Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: classes.Input,\n      type: \"text\",\n      name: \"address\",\n      placeholder: \"Street\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: classes.Input,\n      type: \"text\",\n      name: \"postal\",\n      placeholder: \"Postal Code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Button, {\n      btnType: \"Success\",\n      clicked: this.orderHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"ORDER \"));\n\n    if (this.state.loading) {\n      form = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.ContactData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Enter your Contact Data\"), form);\n  }\n\n}\n\nexport default ContactData;","map":{"version":3,"sources":["/Users/yaroslawbagriy/Dev/React/burger-builder-app/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","Button","Spinner","classes","axios","ContactData","state","name","email","address","street","postalCode","loading","orderHandler","event","preventDefault","console","log","props","ingredients","setState","order","price","customer","zipCode","country","deliveryMethod","post","then","response","history","push","catch","error","render","form","Input"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport classes from './ContactData.css';\nimport axios from '../../../axios-orders';\n\nclass ContactData extends Component {\n    state = {\n        name: '',\n        email: '',\n        address: {\n            street: '',\n            postalCode: ''\n        },\n        loading: false\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        console.log(this.props.ingredients);\n\n        this.setState({ loading: true });\n\n        const order = {\n            ingredients: this.props.ingredients,\n            price: this.props.price,\n            customer: {\n                name: 'Max',\n                address: {\n                    street: '123 Burger Street',\n                    zipCode: '12345',\n                    country: 'Burger'\n                },\n                email: 'burger@burger.com'\n            },\n            deliveryMethod: 'fastest'\n        };\n        axios.post('/orders.json', order)\n            .then(response => {\n                 console.log(response);\n                 this.setState({ loading: false });\n                 this.props.history.push('/');\n            })\n            .catch(error => {\n                console.log(error);\n                this.setState({ loading: false });\n            });\n         \n    }\n\n    render() {\n        let form = (\n            <form>\n                <input className={ classes.Input } type=\"text\" name=\"name\" placeholder=\"Your Name\" />\n                <input className={ classes.Input } type=\"text\" name=\"email\" placeholder=\"Your Email\" />\n                <input className={ classes.Input } type=\"text\" name=\"address\" placeholder=\"Street\" />\n                <input className={ classes.Input } type=\"text\" name=\"postal\" placeholder=\"Postal Code\" />\n                <Button btnType=\"Success\" clicked={ this.orderHandler }>ORDER </Button>\n            </form>\n        );\n\n        if (this.state.loading) {\n            form = <Spinner />;\n        }\n\n        return (\n            <div className={ classes.ContactData }>\n                <h4>Enter your Contact Data</h4>\n                { form }\n            </div>\n        ); \n    }\n}\n\nexport default ContactData;"]},"metadata":{},"sourceType":"module"}