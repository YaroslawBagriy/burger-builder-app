{"ast":null,"code":"import _defineProperty from \"/Users/yaroslawbagriy/Dev/ReactProjects/burger-builder-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/yaroslawbagriy/Dev/ReactProjects/burger-builder-app/src/containers/BurgerBuilder/BurgerBuilder.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false,\n      loading: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      console.log('[BurgerBuilder] purchaseContinueHandler');\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        customer: {\n          name: 'Max',\n          address: {\n            street: '123 Burger Street',\n            zipCode: '12345',\n            country: 'Burger'\n          },\n          email: 'burger@burger.com'\n        },\n        deliveryMethod: 'fastest'\n      };\n      axios.post('/orders.json', order).then(response => {\n        console.log(response);\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      });\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    ;\n    let orderSummary = React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      price: this.state.totalPrice,\n      purchaseCancelled: this.purchaseCancelHandler,\n      purchaseContinued: this.purchaseContinueHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    });\n\n    if (this.state.loading) {\n      orderSummary = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      });\n    }\n\n    ;\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, orderSummary), React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientDeducted: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      purchasable: this.state.purchasable,\n      ordered: this.purchaseHandler,\n      price: this.state.totalPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/yaroslawbagriy/Dev/ReactProjects/burger-builder-app/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","console","log","order","price","customer","name","address","street","zipCode","country","email","deliveryMethod","post","then","response","catch","error","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","orderSummary"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}; \n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0,\n        },\n        totalPrice: 4,\n        purchasable: false,\n        purchasing: false,\n        loading: false\n    };\n\n    updatePurchaseState(ingredients) {\n        const sum = Object.keys(ingredients).map(igKey => {\n            return ingredients[igKey];\n        }).reduce((sum, el) => {\n            return sum + el;\n        }, 0);\n        this.setState({purchasable: sum > 0});\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount =  oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if (oldCount <= 0) {\n            return;\n        }\n        const updatedCount =  oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice -  priceDeduction;\n        this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true});\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false});\n    }\n\n    purchaseContinueHandler = () => {\n        console.log('[BurgerBuilder] purchaseContinueHandler');\n        this.setState({ loading: true });\n\n        const order = {\n            ingredients: this.state.ingredients,\n            price: this.state.totalPrice,\n            customer: {\n                name: 'Max',\n                address: {\n                    street: '123 Burger Street',\n                    zipCode: '12345',\n                    country: 'Burger'\n                },\n                email: 'burger@burger.com'\n            },\n            deliveryMethod: 'fastest'\n        };\n        axios.post('/orders.json', order)\n            .then(response => {\n                 console.log(response);\n                 this.setState({ loading: false, purchasing: false });\n            })\n            .catch(error => {\n                console.log(error);\n                this.setState({ loading: false, purchasing: false });\n            });\n    }\n\n    render() {\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0;\n        };\n\n        let orderSummary = <OrderSummary \n                                ingredients={ this.state.ingredients }\n                                price={ this.state.totalPrice }\n                                purchaseCancelled={ this.purchaseCancelHandler }\n                                purchaseContinued={ this.purchaseContinueHandler }\n                            />;\n        if (this.state.loading) {\n            orderSummary = <Spinner />;\n        };\n\n        return (\n        <Aux>\n            <Modal show={ this.state.purchasing } modalClosed={ this.purchaseCancelHandler }>\n                { orderSummary }\n            </Modal>\n            <Burger ingredients={this.state.ingredients} />\n            <BuildControls \n                ingredientAdded={ this.addIngredientHandler }\n                ingredientDeducted={ this.removeIngredientHandler }\n                disabled={ disabledInfo }\n                purchasable={ this.state.purchasable }\n                ordered={ this.purchaseHandler }\n                price={ this.state.totalPrice }\n                />\n        </Aux>\n        );\n    }\n}\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}